apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/redhat-appstudio/tekton-tools?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "push" && target_branch == "main"
    pipelinesascode.tekton.dev/task: tasks/create-pull-request.yaml
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: tekton-tools
    appstudio.openshift.io/component: test-container
    pipelines.appstudio.openshift.io/type: build
  name: test-container-on-push
  namespace: gbenhaim-tenant
spec:
  params:
  - name: dockerfile
    value: Dockerfile
  - name: git-url
    value: '{{repo_url}}'
  - name: output-image
    value: quay.io/redhat-user-workloads-stage/gbenhaim-tenant/tekton-tools/test-container:{{revision}}
  - name: path-context
    value: .
  - name: revision
    value: '{{revision}}'
  - name: pr-url
    value: '{{body.head_commit.url}}'
  pipelineSpec:
    params:
    - description: Source Repository URL
      name: git-url
      type: string
    - default: ""
      description: Revision of the Source Repository
      name: revision
      type: string
    tasks:
    - name: init
      params:
      - name: image-url
        value: $(params.output-image)
      - name: rebuild
        value: $(params.rebuild)
      - name: skip-checks
        value: $(params.skip-checks)
      - name: skip-optional
        value: $(params.skip-optional)
      - name: pipelinerun-name
        value: $(context.pipelineRun.name)
      - name: pipelinerun-uid
        value: $(context.pipelineRun.uid)
      taskRef:
        params:
        - name: name
          value: init
        - name: bundle
          value: quay.io/redhat-appstudio-tekton-catalog/task-init:0.2@sha256:3d8f01fa59596a998d30dc700fcf7377f09d60008337290eebaeaf604512ce2b
        - name: kind
          value: task
        resolver: bundles
    - name: clone-repository
      params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.revision)
      runAfter:
      - init
      taskRef:
        params:
        - name: name
          value: git-clone
        - name: bundle
          value: quay.io/redhat-appstudio-tekton-catalog/task-git-clone:0.1@sha256:982e53397367ea9680b5cc543f5cbfc8e90124ffb463551eea33e4477d0a7ec6
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      workspaces:
      - name: output
        workspace: workspace
      - name: basic-auth
        workspace: git-auth
    - name: sync-tasks
      runAfter:
      - clone-repository
      workspaces:
      - name: artifacts
        workspace: workspace
      taskRef:
        name: create-pull-request
        kind: Task
      params:
        - name: ORIGIN_REPO
          value: $(params.git-url)
        - name: REVISION
          value: $(params.revision)
        - name: ARTIFACTS_PATH
          value: /workspace/artifacts/source/tasks
        - name: TARGET_GH_REPO
          value: redhat-appstudio/build-definitions
        - name: PR_URL
          value: $(params.pr-url)
        - name: SCRIPT
          value: |
            set -x
            rsync -a --delete $ARTIFACTS_PATH/generate-odcs-compose ./task
            rsync -a --delete $ARTIFACTS_PATH/verify-signed-rpms ./task
            rsync -a --delete $ARTIFACTS_PATH/allocate-namespace ./task
    workspaces:
    - name: workspace
    - name: git-auth
      optional: true
  taskRunTemplate: {}
  workspaces:
  - name: workspace
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
