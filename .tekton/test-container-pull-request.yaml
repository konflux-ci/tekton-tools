apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/konflux-ci/tekton-tools?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch == "main"
    pipelinesascode.tekton.dev/task: >-
      [
      tasks/rpms-signature-scan/0.2/rpms-signature-scan.yaml
      ]
  labels:
    appstudio.openshift.io/application: tekton-tools
    appstudio.openshift.io/component: test-container
    pipelines.appstudio.openshift.io/type: build
  name: test-container-on-pull-request
  namespace: konflux-vanguard-tenant
spec:
  params:
  - name: dockerfile
    value: Dockerfile
  - name: git-url
    value: '{{repo_url}}'
  - name: image-expires-after
    value: 5d
  - name: output-image
    value: quay.io/redhat-user-workloads/konflux-vanguard-tenant/tekton-tools/test-container:on-pr-{{revision}}
  - name: path-context
    value: .
  - name: revision
    value: '{{revision}}'
  - name: target-branch
    value: '{{target_branch}}'
  pipelineSpec:
    finally:
    - name: show-sbom
      params:
      - name: IMAGE_URL
        value: $(tasks.build-container.results.IMAGE_URL)
      taskRef:
        params:
        - name: name
          value: show-sbom
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-show-sbom:0.1@sha256:002f7c8c1d2f9e09904035da414aba1188ae091df0ea9532cd997be05e73d594
        - name: kind
          value: task
        resolver: bundles
    - name: show-summary
      params:
      - name: pipelinerun-name
        value: $(context.pipelineRun.name)
      - name: git-url
        value: $(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)
      - name: image-url
        value: $(params.output-image)
      - name: build-task-status
        value: $(tasks.build-container.status)
      taskRef:
        params:
        - name: name
          value: summary
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-summary:0.2@sha256:76075b709fa06ed824cbc84f41448b397b85bfde1cf9809395ba6d286f5b7cbd
        - name: kind
          value: task
        resolver: bundles
    params:
    - description: Source Repository URL
      name: git-url
      type: string
    - default: ""
      description: Revision of the Source Repository
      name: revision
      type: string
    - default: ""
      name: target-branch
      type: string
    - description: Fully Qualified Output Image
      name: output-image
      type: string
    - default: .
      description: Path to the source code of an application's component from where to build image.
      name: path-context
      type: string
    - default: Dockerfile
      description: Path to the Dockerfile inside the context specified by parameter path-context
      name: dockerfile
      type: string
    - default: "false"
      description: Force rebuild image
      name: rebuild
      type: string
    - default: "false"
      description: Skip checks against built image
      name: skip-checks
      type: string
    - default: "true"
      description: Skip optional checks, set false if you want to run optional checks
      name: skip-optional
      type: string
    - default: "false"
      description: Execute the build with network isolation
      name: hermetic
      type: string
    - default: ""
      description: Build dependencies to be prefetched by Cachi2
      name: prefetch-input
      type: string
    - default: "false"
      description: Java build
      name: java
      type: string
    - default: ""
      description: Image tag expiration time, time values could be something like 1h, 2d, 3w for hours, days, and weeks, respectively.
      name: image-expires-after
    - default: "false"
      description: Build a source image.
      name: build-source-image
      type: string
    results:
    - description: ""
      name: IMAGE_URL
      value: $(tasks.build-container.results.IMAGE_URL)
    - description: ""
      name: IMAGE_DIGEST
      value: $(tasks.build-container.results.IMAGE_DIGEST)
    - description: ""
      name: CHAINS-GIT_URL
      value: $(tasks.clone-repository.results.url)
    - description: ""
      name: CHAINS-GIT_COMMIT
      value: $(tasks.clone-repository.results.commit)
    tasks:
    - name: init
      params:
      - name: image-url
        value: $(params.output-image)
      - name: rebuild
        value: $(params.rebuild)
      - name: skip-checks
        value: $(params.skip-checks)
      - name: skip-optional
        value: $(params.skip-optional)
      - name: pipelinerun-name
        value: $(context.pipelineRun.name)
      - name: pipelinerun-uid
        value: $(context.pipelineRun.uid)
      taskRef:
        params:
        - name: name
          value: init
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:66e90d31e1386bf516fb548cd3e3f0082b5d0234b8b90dbf9e0d4684b70dbe1a
        - name: kind
          value: task
        resolver: bundles
    - name: clone-repository
      params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.revision)
      runAfter:
      - init
      taskRef:
        params:
        - name: name
          value: git-clone
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1@sha256:eca6b8106b6ec1ea4b03d196c007928c57a0683ea1ce068e8f34f9b9bef3387d
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      workspaces:
      - name: output
        workspace: workspace
      - name: basic-auth
        workspace: git-auth
    - name: prefetch-dependencies
      params:
      - name: input
        value: $(params.prefetch-input)
      runAfter:
      - clone-repository
      taskRef:
        params:
        - name: name
          value: prefetch-dependencies
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies:0.2@sha256:735a71137e43f8055bb1871653b5cbca5c8c437d90e1c78c5ba83f19b1ebedc9
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.hermetic)
        operator: in
        values:
        - "true"
      workspaces:
      - name: source
        workspace: workspace
    - name: yaml-lint
      workspaces:
      - name: workspace
        workspace: workspace
      runAfter:
      - clone-repository
      taskSpec:
        workspaces:
        - name: workspace
        steps:
        - name: yaml-lint
          image: registry.access.redhat.com/ubi9/python-39:latest
          workingDir: $(workspaces.workspace.path)/source
          script: |
            python3 -m pip install pipenv
            python3 -m pipenv sync --dev
            python3 -m pipenv run yamllint . && echo "lint_yamls: SUCCESS"
    - name: run-gitlint
      workspaces:
      - name: workspace
        workspace: workspace
      - name: basic-auth
        workspace: git-auth
      runAfter:
      - clone-repository
      taskSpec:
        workspaces:
        - name: workspace
        - name: basic-auth
        steps:
        - name: run-gitlint
          env:
          - name: WORKSPACE_BASIC_AUTH_DIRECTORY_PATH
            value: $(workspaces.basic-auth.path)
          image: registry.access.redhat.com/ubi9/python-39:latest
          workingDir: $(workspaces.workspace.path)/source
          script: |
            #!/bin/bash -ex

            if [ -f "${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/.git-credentials" ] && [ -f "${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/.gitconfig" ]; then
              cp "${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/.git-credentials" "$HOME/.git-credentials"
              cp "${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/.gitconfig" "$HOME/.gitconfig"
            else
              echo "Unknown basic-auth workspace format"
              exit 1
            fi
            chmod 400 "$HOME/.git-credentials"
            chmod 400 "$HOME/.gitconfig"

            python -m pip install gitlint
            git config --global --add safe.directory '*'
            git fetch origin "$(params.target-branch)"
            gitlint --fail-without-commits --commits "origin/$(params.target-branch)..HEAD"
    - name: run-kubelint
      runAfter:
      - clone-repository
      workspaces:
      - name: source
        workspace: workspace
      taskRef:
        resolver: git
        params:
        - name: url
          value: https://github.com/tektoncd/catalog.git
        - name: revision
          value: main
        - name: pathInRepo
          value: task/kube-linter/0.1/kube-linter.yaml
      params:
      - name: config_file_path
        value: source/.kube-linter.yaml
    - name: build-container
      params:
      - name: IMAGE
        value: $(params.output-image)
      - name: DOCKERFILE
        value: $(params.dockerfile)
      - name: CONTEXT
        value: $(params.path-context)
      - name: HERMETIC
        value: $(params.hermetic)
      - name: PREFETCH_INPUT
        value: $(params.prefetch-input)
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.image-expires-after)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit)
      runAfter:
      - prefetch-dependencies
      taskRef:
        params:
        - name: name
          value: buildah
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-buildah:0.4@sha256:977ebe581158e184504fb5886f534812b91cc3e79445be48449f5b7cfd14f034
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      workspaces:
      - name: source
        workspace: workspace
    - name: build-source-image
      params:
      - name: BINARY_IMAGE
        value: $(params.output-image)
      runAfter:
      - build-container
      taskRef:
        params:
        - name: name
          value: source-build
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-source-build:0.2@sha256:6077f293bd810c2642200f6c531d938a917201861535b7f720d37f7ed7c5d88d
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      - input: $(params.build-source-image)
        operator: in
        values:
        - "true"
      workspaces:
      - name: workspace
        workspace: workspace
    - name: sast-shell-check
      params:
        - name: image-digest
          value: $(tasks.build-container.results.IMAGE_DIGEST)
        - name: image-url
          value: $(tasks.build-container.results.IMAGE_URL)
      runAfter:
        - build-container
      taskRef:
        params:
          - name: name
            value: sast-shell-check
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-sast-shell-check:0.1@sha256:8567a911a467746e2785f1e4fb69e5c2bee1879df43a2ccdb8ae928e58274488
          - name: kind
            value: task
        resolver: bundles
      when:
        - input: $(params.skip-checks)
          operator: in
          values:
            - "false"
      workspaces:
        - name: workspace
          workspace: workspace
    - name: sast-unicode-check
      params:
        - name: image-url
          value: $(tasks.build-container.results.IMAGE_URL)
      runAfter:
        - build-container
      taskRef:
        params:
          - name: name
            value: sast-unicode-check
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-sast-unicode-check:0.2@sha256:b690b6a725fc2753283350eb313057f8d6ed7417503f80958669a20d7bbc8900
          - name: kind
            value: task
        resolver: bundles
      when:
        - input: $(params.skip-checks)
          operator: in
          values:
            - "false"
      workspaces:
        - name: workspace
          workspace: workspace
    - name: deprecated-base-image-check
      params:
      - name: IMAGE_URL
        value: $(tasks.build-container.results.IMAGE_URL)
      - name: IMAGE_DIGEST
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      runAfter:
      - build-container
      taskRef:
        params:
        - name: name
          value: deprecated-image-check
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check:0.5@sha256:270a79138a98e43c366d3722978cb5940d2bcb822ba6b60377330f863b7a1e62
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(params.skip-checks)
        operator: in
        values:
        - "false"
    - name: local-rpms-signature-scan
      runAfter:
      - build-container
      taskRef:
        name: rpms-signature-scan
        kind: Task
      params:
      - name: image-url
        value: $(tasks.build-container.results.IMAGE_URL)
      - name: image-digest
        value: $(tasks.build-container.results.IMAGE_DIGEST)
    - name: rpms-signature-scan
      params:
      - name: image-url
        value: $(tasks.build-container.results.IMAGE_URL)
      - name: image-digest
        value: $(tasks.build-container.results.IMAGE_DIGEST)
      runAfter:
      - build-container
      taskRef:
        params:
        - name: name
          value: rpms-signature-scan
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan:0.2@sha256:1b6c20ab3dbfb0972803d3ebcb2fa72642e59400c77bd66dfd82028bdd09e120
        - name: kind
          value: task
        resolver: bundles
    workspaces:
    - name: workspace
    - name: git-auth
  taskRunTemplate: {}
  workspaces:
  - name: workspace
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
