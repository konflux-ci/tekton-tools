apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/redhat-appstudio/tekton-tools?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-event: '[pull_request]'
    pipelinesascode.tekton.dev/on-target-branch: '[main]'
    pipelinesascode.tekton.dev/task: tasks/rpms-signature-scan/0.1/rpms-signature-scan.yaml
  labels:
    appstudio.openshift.io/application: tekton-tools
    appstudio.openshift.io/component: tekton-tools
    pipelines.appstudio.openshift.io/type: build
  name: rpms-signature-scan-pull-request
  namespace: gbenhaim-tenant
spec:
  pipelineSpec:
    params:
    - name: FAIL_UNSIGNED
      type: string
      default: false
    tasks:
      - name: rpms-signature-scan-signed
        params:
        - name: image-url
          value: "quay.io/o11y_tests/signed-rpms:latest"
        - name: fail-unsigned
          value: $(params.FAIL_UNSIGNED)
        taskRef:
          name: rpms-signature-scan
          kind: Task
      - name: verify-output-signed
        runAfter:
          - rpms-signature-scan-signed
        params:
          - name: TEST_OUTPUT
            value: $(tasks.rpms-signature-scan-signed.results.TEST_OUTPUT)
          - name: RPMS_DATA
            value: $(tasks.rpms-signature-scan-signed.results.RPMS_DATA)
        taskSpec:
          params:
            - name: TEST_OUTPUT
              type: string
              description: output of the task
            - name: RPMS_DATA
              type: string
              description: Information about signed and unsigned RPMs
          steps:
            - name: verify-output
              image: registry.access.redhat.com/ubi9/ubi-minimal:9.4-1134
              script: |
                #!/bin/bash
                set -ex
                exit=0

                output=$(params.TEST_OUTPUT)
                if [[ "$output" == *"completed: No unsigned RPMs"* ]] &&
                   [[ "$output" == *"SUCCESS"* ]]; then
                  echo "Output matches!"
                else
                  echo "Output does not match!"
                  exit=1
                fi

                results="$(params.RPMS_DATA)"
                if [[ "$results" == *"199e2f91fd431d51: 95"* ]] &&
                   [[ "$results" == *"unsigned: 0"* ]]; then
                  echo "results matches!"
                else
                  echo "results does not match!"
                  exit=1
                fi
                exit $exit

      - name: rpms-signature-scan-unsigned
        params:
        - name: image-url
          value: "quay.io/o11y_tests/unsigned-rpms:latest"
        - name: fail-unsigned
          value: $(params.FAIL_UNSIGNED)
        taskRef:
          name: rpms-signature-scan
          kind: Task
      - name: verify-output-unsigned
        runAfter:
          - rpms-signature-scan-unsigned
        params:
          - name: TEST_OUTPUT
            value: $(tasks.rpms-signature-scan-unsigned.results.TEST_OUTPUT)
          - name: RPMS_DATA
            value: $(tasks.rpms-signature-scan-unsigned.results.RPMS_DATA)
        taskSpec:
          params:
            - name: TEST_OUTPUT
              type: string
              description: output of the task
            - name: RPMS_DATA
              type: string
              description: Information about signed and unsigned RPMs
          steps:
            - name: verify-output
              image: registry.access.redhat.com/ubi9/ubi-minimal:9.4-1134
              script: |
                #!/bin/bash
                set -ex
                exit=0

                output=$(params.TEST_OUTPUT)
                if [[ "$output" == *"completed: Not all RPMs were confirmed to be signed. Refer to Tekton task output for details"* ]] &&
                   [[ "$output" == *"ERROR"* ]]; then
                  echo "Output matches!"
                else
                  echo "Output does not match!"
                  exit=1
                fi

                results="$(params.RPMS_DATA)"
                if [[ "$results" == *"199e2f91fd431d51: 163"* ]] &&
                   [[ "$results" == *"unsigned: 68"* ]]; then
                  echo "results matches!"
                else
                  echo "results does not match!"
                  exit=1
                fi
                exit $exit
