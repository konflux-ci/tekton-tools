apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/redhat-appstudio/tekton-tools?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-event: '[pull_request]'
    pipelinesascode.tekton.dev/on-target-branch: '[main]'
    pipelinesascode.tekton.dev/task: tasks/verify-signed-rpms.yaml
  labels:
    appstudio.openshift.io/application: tekton-tools
    appstudio.openshift.io/component: tekton-tools
    pipelines.appstudio.openshift.io/type: build
  name: verify-signed-rpms-pull-request
  namespace: gbenhaim-tenant
spec:
  params:
  - name: URL
    value: '{{source_url}}'
  - name: REVISION
    value: '{{revision}}'
  - name: SNAPSHOT
    value: |
      {
        "application": "insights-content-template-renderer",
        "components": [
            {
                "name": "insights-content-template-renderer",
                "containerImage": "quay.io/redhat-user-workloads/gbenhaim-tenant/insights-content-template-renderer/insights-content-template-renderer@sha256:536b8213a355ca363d90703a2b5391463a2d5692b85d84a8842a229acd9d4ec1",
                "source": {
                    "git": {
                        "url": "https://github.com/gbenhaim/insights-content-template-renderer",
                        "revision": "6489e0a2b5848d35e65419eb6dc22558c7a7a71e"
                    }
                }
            }
        ],
        "artifacts": {}
      }
  - name: APP_NAME
    value: ccx-data-pipeline
  - name: COMPONENTS
    value: insights-content-template-renderer
  - name: COMPONENTS_W_RESOURCES
    value: insights-content-template-renderer
  - name: COMPONENT_NAME
    value: insights-content-template-renderer
  - name: IQE_PLUGINS
    value: ccx
  - name: IQE_FILTER_EXPRESSION
    value: test_plugin_accessible
  - name: IQE_CJI_TIMEOUT
    value: "30m"
  pipelineSpec:
    params:
    - name: IMAGE
      type: string
      description: The image to use for this pipeline
      default: quay.io/redhat-user-workloads/rhtap-o11y-tenant/tools/tools:6eea7e09df3e96d770117e5bc71e7a05191cf012
    - name: INPUT 
      type: string
      default: |
        {
          "components": [
              {
                  "containerImage": "quay.io/abiton1/ansible-automation-platform-2-next-eda-controller-rhel8:latest"
              }
          ]
        }
    - name: FAIL_UNSIGNED
      type: string
      default: False
    tasks:
      - name: verify-signed-rpms
        params:
        - name: IMAGE
          value: $(params.IMAGE)
        - name: INPUT
          value: $(params.INPUT)
        - name: FAIL_UNSIGNED
          value: $(params.FAIL_UNSIGNED)
        taskRef:
          name: verify-signed-rpms
          kind: Task

      - name: verify-output
        runAfter:
          - verify-signed-rpms
        params:
          - name: IMAGE
            value: $(params.IMAGE)
          - name: verify-signed-rpms-output
            value: $(tasks.verify-signed-rpms.results.verification-output)
        taskSpec:
          params:
            - name: IMAGE
              type: string
              description: The image to use for this task
              default: ""
            - name: verify-signed-rpms-output
              type: string
          steps:
            - name: verify-output-and-exit-code
              image: "$(params.IMAGE)"
              script: |
                #!/bin/bash
                set -e
              
                output="$(params.verify-signed-rpms-output)"
                echo "output: $output"
               
                if [[ "$output" == *"ansible-automation-platform-common-2.4-1.el8ap"* ]]; then
                  echo "Output matches!"
                else
                  echo "Output does not match"
                  exit 1
                fi
